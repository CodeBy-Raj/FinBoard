diff --git a/node_modules/alphavantage/lib/data.js b/node_modules/alphavantage/lib/data.js
index b82b8fa..6d3701a 100644
--- a/node_modules/alphavantage/lib/data.js
+++ b/node_modules/alphavantage/lib/data.js
@@ -1,3 +1,6 @@
+// Add a delay to avoid rate limiting
+const delay = ms => new Promise(res => setTimeout(res, ms));
+
 /**
  * A wrapper for the data api.
  *
@@ -8,6 +11,7 @@
  * @returns {object} The data api object.
  */
 module.exports = config => {
+
   /**
    * Util function to get the data.
    *
@@ -15,6 +19,7 @@
    * @returns {Promise} A promise which resolves with the data.
    */
   const get = Fn(config);
+
   return {
     intraday: (symbol, outputsize = 'compact', datatype = 'json', interval = '60min') =>
       get('TIME_SERIES_INTRADAY', {
@@ -23,12 +28,15 @@
         datatype,
         interval
       }),
-    daily: (symbol, outputsize = 'compact', datatype = 'json') =>
-      get('TIME_SERIES_DAILY', {
+    daily: async (symbol, outputsize = 'compact', datatype = 'json') => {
+      await delay(12000); // Add a 12-second delay before each call
+      return get('TIME_SERIES_DAILY', {
         symbol,
         outputsize,
         datatype
-      }),
+      });
+    },
     daily_adjusted: (symbol, outputsize = 'compact', datatype = 'json') =>
       get('TIME_SERIES_DAILY_ADJUSTED', {
         symbol,
diff --git a/node_modules/alphavantage/lib/util.js b/node_modules/alphavantage/lib/util.js
index 923f99a..10b271d 100644
--- a/node_modules/alphavantage/lib/util.js
+++ b/node_modules/alphavantage/lib/util.js
@@ -37,6 +37,12 @@
           body += chunk;
         });
         res.on('end', () => {
+          // Try to parse as JSON to check for error messages from the API
+          try {
+            const jsonBody = JSON.parse(body);
+            if (jsonBody.Note) return resolve(jsonBody);
+          } catch (e) { /* Not a JSON response, continue as normal */ }
+
           if (res.statusCode !== 200) {
             return reject(`An error occured. [${res.statusCode}] ${body}`);
           }
